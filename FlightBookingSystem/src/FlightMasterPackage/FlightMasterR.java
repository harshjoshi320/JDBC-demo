package FlightMasterPackage;

import FlightPackage.MainForm;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/*
 * To change this template, choose Tools | Templates and open the template in
 * the editor.
 */

/**
 *
 * @author maHesH
 */
public class FlightMasterR extends javax.swing.JFrame {

    /**
     * Creates new form FlightMasterR
     */
    public FlightMasterR() {
        initComponents();
        try {
            ImageIcon icon = new ImageIcon(getClass().getResource("AWT-Plane.png"));// finding the icon image from the source
            setIconImage(icon.getImage());//Setting the image as icon for the frame
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        operationBG = new javax.swing.ButtonGroup();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        masterTBL = new javax.swing.JTable();
        BackCMD = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jPanel2 = new javax.swing.JPanel();
        AddRB = new javax.swing.JRadioButton();
        ModRB = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        ClearCMD = new javax.swing.JButton();
        GetCmd = new javax.swing.JButton();
        AddCMD = new javax.swing.JButton();
        ModCMD = new javax.swing.JButton();
        DeleteCMD = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        FNOtxt = new javax.swing.JTextField();
        FIDtxt = new javax.swing.JTextField();
        AIRtxt = new javax.swing.JTextField();
        FROtxt = new javax.swing.JTextField();
        TOtxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        DEPtxt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        ARRtxt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        REtxt = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        RBtxt = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        RFtxt = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        SEtxt = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        SBtxt = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        SFtxt = new javax.swing.JTextField();
        DRtxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Flight Master");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FlightPackage/soft_light_wave_abstract_background-wide.jpg"))); // NOI18N
        jLabel1.setBounds(0, 0, 775, 720);
        jLayeredPane1.add(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jSeparator1.setBounds(0, 20, 775, 2);
        jLayeredPane1.add(jSeparator1, javax.swing.JLayeredPane.PALETTE_LAYER);
        jSeparator2.setBounds(0, 80, 775, 2);
        jLayeredPane1.add(jSeparator2, javax.swing.JLayeredPane.PALETTE_LAYER);

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 22)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(14, 32, 93));
        jLabel2.setText("  Flight Master Record");
        jLabel2.setBounds(0, 20, 250, 60);
        jLayeredPane1.add(jLabel2, javax.swing.JLayeredPane.POPUP_LAYER);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FlightPackage/iconlogo.png"))); // NOI18N
        jLabel3.setBounds(140, 10, 200, 80);
        jLayeredPane1.add(jLabel3, javax.swing.JLayeredPane.MODAL_LAYER);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        masterTBL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "FlightNo", "FlightID", "Airline", "From", "To", "DepTime", "Arrtime", "RateEco", "RateBuss", "RateFirst", "EcoSeats", "BussSeats", "FirstSeats", "DaysRunning"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        masterTBL.setToolTipText("Flight Master Record");
        masterTBL.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        masterTBL.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        masterTBL.setRowHeight(20);
        masterTBL.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        masterTBL.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(masterTBL);
        masterTBL.getColumnModel().getColumn(0).setResizable(false);
        masterTBL.getColumnModel().getColumn(1).setResizable(false);
        masterTBL.getColumnModel().getColumn(2).setResizable(false);
        masterTBL.getColumnModel().getColumn(3).setResizable(false);
        masterTBL.getColumnModel().getColumn(4).setResizable(false);
        masterTBL.getColumnModel().getColumn(5).setResizable(false);
        masterTBL.getColumnModel().getColumn(6).setResizable(false);
        masterTBL.getColumnModel().getColumn(7).setResizable(false);
        masterTBL.getColumnModel().getColumn(8).setResizable(false);
        masterTBL.getColumnModel().getColumn(9).setResizable(false);
        masterTBL.getColumnModel().getColumn(10).setResizable(false);
        masterTBL.getColumnModel().getColumn(11).setResizable(false);
        masterTBL.getColumnModel().getColumn(12).setResizable(false);
        masterTBL.getColumnModel().getColumn(13).setResizable(false);

        jScrollPane2.setBounds(10, 100, 750, 190);
        jLayeredPane1.add(jScrollPane2, javax.swing.JLayeredPane.MODAL_LAYER);

        BackCMD.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        BackCMD.setText("Back");
        BackCMD.setToolTipText("Back to Main form");
        BackCMD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackCMDActionPerformed(evt);
            }
        });
        BackCMD.setBounds(690, 680, 70, 30);
        jLayeredPane1.add(BackCMD, javax.swing.JLayeredPane.PALETTE_LAYER);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add/Modify", 0, 0, new java.awt.Font("Microsoft Sans Serif", 1, 10))); // NOI18N
        jPanel1.setOpaque(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Select Operation", 0, 0, new java.awt.Font("Microsoft Sans Serif", 1, 12))); // NOI18N
        jPanel2.setOpaque(false);

        operationBG.add(AddRB);
        AddRB.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        AddRB.setSelected(true);
        AddRB.setText("Add a new record/Delete a record");
        AddRB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddRB.setOpaque(false);
        AddRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddRBActionPerformed(evt);
            }
        });

        operationBG.add(ModRB);
        ModRB.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ModRB.setText("Modify an existing record");
        ModRB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ModRB.setOpaque(false);
        ModRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModRBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddRB)
                    .addComponent(ModRB))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AddRB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(ModRB)
                .addContainerGap())
        );

        jPanel2.setBounds(10, 10, 240, 100);
        jLayeredPane2.add(jPanel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setOpaque(false);

        ClearCMD.setText("Clear");
        ClearCMD.setToolTipText("Clear ");
        ClearCMD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearCMDActionPerformed(evt);
            }
        });

        GetCmd.setText("Get Row");
        GetCmd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GetCmdActionPerformed(evt);
            }
        });

        AddCMD.setText("Add Record To Flights");
        AddCMD.setToolTipText("Add a new record to the the Flights table. ");
        AddCMD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddCMDActionPerformed(evt);
            }
        });

        ModCMD.setText("Modify");
        ModCMD.setToolTipText("Modify a record");
        ModCMD.setPreferredSize(new java.awt.Dimension(77, 23));
        ModCMD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModCMDActionPerformed(evt);
            }
        });

        DeleteCMD.setText("Delete");
        DeleteCMD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteCMDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(ClearCMD)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(GetCmd))
                    .addComponent(AddCMD, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ModCMD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DeleteCMD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(201, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GetCmd, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClearCMD, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ModCMD, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddCMD, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeleteCMD, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBounds(260, 10, 470, 100);
        jLayeredPane2.add(jPanel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Flight no.");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Flight ID");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Airline");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("From");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("To");

        FNOtxt.setFocusable(false);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Departure Time");

        DEPtxt.setToolTipText("HH:MM:SS");
        DEPtxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                DEPtxtFocusLost(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Arrival time");

        ARRtxt.setToolTipText("HH:MM:SS");
        ARRtxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ARRtxtFocusLost(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("Rate(Economy Class)");

        REtxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                REtxtFocusLost(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("Rate(Bussiness Class)");

        RBtxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                RBtxtFocusLost(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setText("Rate(First Class)");

        RFtxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                RFtxtFocusLost(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel15.setText("Seats(Economy Class)");

        SEtxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                SEtxtFocusLost(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel16.setText("Seats(Bussiness Class)");

        SBtxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                SBtxtFocusLost(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel17.setText("Seats(First Class)");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel18.setText("Days Running");

        SFtxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                SFtxtFocusLost(evt);
            }
        });

        DRtxt.setToolTipText("Enter day no.(1-7).");
        DRtxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                DRtxtFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 738, Short.MAX_VALUE)
            .addComponent(jSeparator3)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(FNOtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(FIDtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(AIRtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(FROtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(TOtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(84, 84, 84)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(RFtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(RBtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(REtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ARRtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(DEPtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(69, 69, 69)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SEtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SBtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SFtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DRtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FNOtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FIDtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AIRtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DEPtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SEtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ARRtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SBtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(REtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SFtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FROtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RBtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DRtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TOtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RFtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.setBounds(10, 300, 750, 370);
        jLayeredPane1.add(jPanel1, javax.swing.JLayeredPane.PALETTE_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 775, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 719, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    Statement connect() throws ClassNotFoundException, SQLException {//Connection Method

        Class.forName("com.mysql.jdbc.Driver");
        Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/flight_book", "root", "ipqwe320");
        Statement stmt = con.createStatement();
        return stmt;
    }

    void populate() {// Method for populating the master records table
        DefaultTableModel mastMDL = (DefaultTableModel) masterTBL.getModel();

        try {
            ResultSet TBL = connect().executeQuery("select * from flights;");
            while (TBL.next()) {
                String Fno = String.valueOf(TBL.getInt("flightno"));
                String FID = TBL.getString("flight_ID");
                String Airline = TBL.getString("airline");
                String From = TBL.getString("from_f");
                String To = TBL.getString("to_f");
                String DepT = TBL.getString("dep_time");
                String ArrT = TBL.getString("arr_time");
                String REco = TBL.getString("rate_eco");
                String RBuss = TBL.getString("rate_buss");
                String RFirst = TBL.getString("rate_first");
                String EcoS = TBL.getString("eco_seats");
                String BussS = TBL.getString("buss_seats");
                String FirstS = TBL.getString("first_seats");
                String DaysR = TBL.getString("flight_day");
                mastMDL.addRow(new Object[]{Fno, FID, Airline, From, To, DepT, ArrT, REco, RBuss, RFirst, EcoS, BussS, FirstS, DaysR});
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    void txtClear() {// method to clear all text fields
        if (AddRB.isSelected()) {
            //FNOtxt will not be cleared if the AddRB is selected
            FIDtxt.setText("");
            AIRtxt.setText("");
            DEPtxt.setText("");
            ARRtxt.setText("");
            FROtxt.setText("");
            TOtxt.setText("");
            REtxt.setText("");
            RBtxt.setText("");
            RFtxt.setText("");
            SEtxt.setText("");
            SBtxt.setText("");
            SFtxt.setText("");
            DRtxt.setText("");
        } else {
            FNOtxt.setText("");
            FIDtxt.setText("");
            AIRtxt.setText("");
            DEPtxt.setText("");
            ARRtxt.setText("");
            FROtxt.setText("");
            TOtxt.setText("");
            REtxt.setText("");
            RBtxt.setText("");
            RFtxt.setText("");
            SEtxt.setText("");
            SBtxt.setText("");
            SFtxt.setText("");
            DRtxt.setText("");
        }



    }

    boolean checkIfEmpty() { // detecting an empty field
        if (FIDtxt.getText().equals("") || FIDtxt.getText().equals("") || FNOtxt.getText().equals("") || FIDtxt.getText().equals("") || AIRtxt.getText().equals("") || DEPtxt.getText().equals("") || ARRtxt.getText().equals("") || REtxt.getText().equals("") || RBtxt.getText().equals("") || RFtxt.getText().equals("") || SEtxt.getText().equals("") || SBtxt.getText().equals("") || SFtxt.getText().equals("") || DRtxt.getText().equals("")) {
            return true;
        } else {
            return false;
        }
    }

    boolean checkIfNum(String val) {// checking the validity of entered value
        if (val.contains("1") || val.contains("2") || val.contains("2") || val.contains("3") || val.contains("4") || val.contains("5") || val.contains("6") || val.contains("7") || val.contains("8") || val.contains("9") || val.contains("0")) {
            return true;
        } else {
            return false;
        }
    }

    void setPNR() {
        try {

            ResultSet Cnt = connect().executeQuery("select count(*) from flights;");
            Cnt.next();
            int ID = Cnt.getInt("count(*)");
            FNOtxt.setText(Integer.toString(ID + 1));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        if (AddRB.isSelected()) {
            AddCMD.setVisible(true);
            DeleteCMD.setVisible(true);
            FIDtxt.setFocusable(true);
            AIRtxt.setFocusable(true);
            GetCmd.setVisible(false);
            ModCMD.setVisible(false);
            txtClear();
            setPNR();
        } else if (ModRB.isSelected()) {
            AddCMD.setVisible(false);
            DeleteCMD.setVisible(false);
            FIDtxt.setFocusable(false);
            AIRtxt.setFocusable(false);
            GetCmd.setVisible(true);
            ModCMD.setVisible(true);
            txtClear();
        }
        populate();

    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        new MainForm().setVisible(true);

    }//GEN-LAST:event_formWindowClosing

    private void BackCMDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackCMDActionPerformed
        // TODO add your handling code here:
        new MainForm().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BackCMDActionPerformed

    private void AddCMDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddCMDActionPerformed
        // TODO add your handling code here:
        DefaultTableModel mastMDL = (DefaultTableModel) masterTBL.getModel();
        if (checkIfEmpty() == true) {
            JOptionPane.showMessageDialog(this, "Warning!\nOne or more fields are empty.", "Warning!", JOptionPane.WARNING_MESSAGE);
        } else {

            int n = JOptionPane.showConfirmDialog(this, "Do you want to add this record to the flight master records?", "Add Record", JOptionPane.YES_NO_OPTION);
            if (n == 0) {



                try {
                    String check = "select * from flights where flightno = " + FNOtxt.getText() + " and flight_ID = '" + FIDtxt.getText() + "' ;";
                    ResultSet chkResult = connect().executeQuery(check);
                    if (chkResult.next()) {
                        JOptionPane.showMessageDialog(this, "Error:Duplicate FlightNo or FlightID found.", "", JOptionPane.WARNING_MESSAGE);
                        return;
                    } else {
                        String Insert = "insert into flights (flightno,flight_id,airline,from_f,to_f,dep_time,arr_time,rate_eco,rate_buss,rate_first,eco_seats,buss_seats,first_seats,flight_day) values (" + FNOtxt.getText() + ",'" + FIDtxt.getText() + "','" + AIRtxt.getText() + "','" + FROtxt.getText() + "','" + TOtxt.getText() + "','" + DEPtxt.getText() + "','" + ARRtxt.getText() + "','" + REtxt.getText() + "','" + RBtxt.getText() + "','" + RFtxt.getText() + "','" + SEtxt.getText() + "','" + SBtxt.getText() + "','" + SFtxt.getText() + "','" + DRtxt.getText() + "')";
                        int rowAff = connect().executeUpdate(Insert);
                        if (rowAff == 0) {
                            JOptionPane.showMessageDialog(this, "There was an error while executing the update.\nPlease try again.", "Error", JOptionPane.ERROR_MESSAGE);
                            return;
                        } else if (rowAff == 1) {
                            JOptionPane.showMessageDialog(this, "The record was successfuly added.", "Update Successful!", JOptionPane.INFORMATION_MESSAGE);
                            mastMDL.setRowCount(0);
                            populate();
                            setPNR();
                        }


                    }

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
            }
        }
    }//GEN-LAST:event_AddCMDActionPerformed

    private void ClearCMDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearCMDActionPerformed
        // TODO add your handling code here:
        txtClear();
    }//GEN-LAST:event_ClearCMDActionPerformed

    private void AddRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddRBActionPerformed
        // TODO add your handling code here:
        txtClear();
        GetCmd.setVisible(false);
        ModCMD.setVisible(false);
        AddCMD.setVisible(true);
        DeleteCMD.setVisible(true);
        FIDtxt.setFocusable(true);
        AIRtxt.setFocusable(true);

        setPNR();

    }//GEN-LAST:event_AddRBActionPerformed

    private void ModRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModRBActionPerformed
        // TODO add your handling code here:
        txtClear();
        GetCmd.setVisible(true);
        ModCMD.setVisible(true);
        AddCMD.setVisible(false);
        FIDtxt.setFocusable(false);
        AIRtxt.setFocusable(false);
        DeleteCMD.setVisible(false);

    }//GEN-LAST:event_ModRBActionPerformed

    private void GetCmdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GetCmdActionPerformed
        // TODO add your handling code here:


        try {

            int row = masterTBL.getSelectedRow();
            FNOtxt.setText(masterTBL.getValueAt(row, 0).toString());
            FIDtxt.setText(masterTBL.getValueAt(row, 1).toString());
            AIRtxt.setText(masterTBL.getValueAt(row, 2).toString());
            FROtxt.setText(masterTBL.getValueAt(row, 3).toString());
            TOtxt.setText(masterTBL.getValueAt(row, 4).toString());
            DEPtxt.setText(masterTBL.getValueAt(row, 5).toString());
            ARRtxt.setText(masterTBL.getValueAt(row, 6).toString());
            REtxt.setText(masterTBL.getValueAt(row, 7).toString());
            RBtxt.setText(masterTBL.getValueAt(row, 8).toString());
            RFtxt.setText(masterTBL.getValueAt(row, 9).toString());
            SEtxt.setText(masterTBL.getValueAt(row, 10).toString());
            SBtxt.setText(masterTBL.getValueAt(row, 11).toString());
            SFtxt.setText(masterTBL.getValueAt(row, 12).toString());
            DRtxt.setText(masterTBL.getValueAt(row, 13).toString());





        } catch (Exception e) {
        }

    }//GEN-LAST:event_GetCmdActionPerformed

    private void ModCMDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModCMDActionPerformed
        // TODO add your handling code here:
        DefaultTableModel mastMDL = (DefaultTableModel) masterTBL.getModel();
        if (checkIfEmpty() == true) {
            JOptionPane.showMessageDialog(this, "Warning!\nOne or more fields are empty.", "Warning!", JOptionPane.WARNING_MESSAGE);
        } else {

            try {
                String Update = "update flights set from_f ='" + FROtxt.getText() + "',to_f = '" + TOtxt.getText() + "',arr_time='" + ARRtxt.getText() + "',dep_time = '" + DEPtxt.getText() + "',rate_eco = '" + REtxt.getText()
                        + "',rate_buss = '" + RBtxt.getText() + "',rate_first = '" + RFtxt.getText() + "',eco_seats = '" + SEtxt.getText() + "',buss_seats = '" + SBtxt.getText() + "',first_seats ='" + SFtxt.getText() + "',flight_day ='" + DRtxt.getText() + "' where flightno =" + FNOtxt.getText() + " and flight_id='" + FIDtxt.getText() + "' ;";
                int rowAff = connect().executeUpdate(Update);
                if (rowAff == 0) {
                    JOptionPane.showMessageDialog(this, "Error modifying the record.\nPlease try again.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                } else if (rowAff == 1) {
                    JOptionPane.showMessageDialog(this, "Record modified successfuly!", "Record modified!", JOptionPane.INFORMATION_MESSAGE);
                    mastMDL.setRowCount(0);
                    populate();
                }


            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_ModCMDActionPerformed

    private void DEPtxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DEPtxtFocusLost
        // TODO add your handling code here:

        try {

            SimpleDateFormat dateF = new SimpleDateFormat("hh:mm:ss");//Made a new date format
            String inputD = DEPtxt.getText();// Getting input from textfield
            java.util.Date date1 = dateF.parse(inputD);//Creating a new date
            Calendar cal = Calendar.getInstance();//Getting new instance of java.util.Calender class
            cal.setTime(date1);// Setting time to calender, will throw exception if invalid input is give

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Invalid entry found.", "Warning!", JOptionPane.WARNING_MESSAGE);
            DEPtxt.setText("");
        }
    }//GEN-LAST:event_DEPtxtFocusLost

    private void DeleteCMDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteCMDActionPerformed
        // TODO add your handling code here:
        int DResult = JOptionPane.showConfirmDialog(this, "Do you want to delete this flight", "Delete flight?", JOptionPane.YES_NO_OPTION);
        if (DResult == 0) {
            DefaultTableModel mastMDL = (DefaultTableModel) masterTBL.getModel();
            if (!(masterTBL.getSelectedRowCount() == 0)) {
                int row = masterTBL.getSelectedRow();
                String Fno = masterTBL.getValueAt(row, 0).toString();
                String FID = masterTBL.getValueAt(row, 1).toString();

                try {
                    int rowAff = connect().executeUpdate("delete from flights where flightno = " + Fno + " and flight_id ='" + FID + "' ;");
                    if (rowAff == 0) {
                        JOptionPane.showMessageDialog(this, "Error deleting the record.\nPlease try again.", "Error", JOptionPane.ERROR_MESSAGE);
                        return;
                    } else if (rowAff == 1) {
                        
                        JOptionPane.showMessageDialog(this, "Record deleted successfuly!", "Record Deleted!", JOptionPane.INFORMATION_MESSAGE);
                        mastMDL.setRowCount(0);
                        populate();
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(this, "Please select a row to delete.", "No row selected!", JOptionPane.WARNING_MESSAGE);
            }
        } else {
        }
    }//GEN-LAST:event_DeleteCMDActionPerformed

    private void ARRtxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ARRtxtFocusLost
        // TODO add your handling code here:
        try {

            SimpleDateFormat dateF = new SimpleDateFormat("hh:mm:ss");//Made a new date format
            String inputD = DEPtxt.getText();// Getting input from textfield
            java.util.Date date1 = dateF.parse(inputD);//Creating a new date
            Calendar cal = Calendar.getInstance();//Getting new instance of java.util.Calender class
            cal.setTime(date1);// Setting time to calender, will throw exception if invalid input is give

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Invalid entry found.", "Warning!", JOptionPane.WARNING_MESSAGE);
            DEPtxt.setText("");
        }
    }//GEN-LAST:event_ARRtxtFocusLost

    private void REtxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_REtxtFocusLost
        // TODO add your handling code here:
        if (checkIfNum(REtxt.getText()) == false) {
            JOptionPane.showMessageDialog(this, "Invalid Entry!/nEnter only numeric values.", "Warning!", JOptionPane.WARNING_MESSAGE);
            REtxt.setText("");
        }


    }//GEN-LAST:event_REtxtFocusLost

    private void RBtxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RBtxtFocusLost
        // TODO add your handling code here:
        if (checkIfNum(RBtxt.getText()) == false) {
            JOptionPane.showMessageDialog(this, "Invalid Entry!/nEnter only numeric values.", "Warning!", JOptionPane.WARNING_MESSAGE);
            RBtxt.setText("");
        }
    }//GEN-LAST:event_RBtxtFocusLost

    private void RFtxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RFtxtFocusLost
        // TODO add your handling code here:
        if (checkIfNum(RFtxt.getText()) == false) {
            JOptionPane.showMessageDialog(this, "Invalid Entry!/nEnter only numeric values.", "Warning!", JOptionPane.WARNING_MESSAGE);
            RFtxt.setText("");
        }
    }//GEN-LAST:event_RFtxtFocusLost

    private void SEtxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SEtxtFocusLost
        // TODO add your handling code here:
        if (checkIfNum(SEtxt.getText()) == false) {
            JOptionPane.showMessageDialog(this, "Invalid Entry!/nEnter only numeric values.", "Warning!", JOptionPane.WARNING_MESSAGE);
            SEtxt.setText("");
        }
    }//GEN-LAST:event_SEtxtFocusLost

    private void SBtxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SBtxtFocusLost
        // TODO add your handling code here:
        if (checkIfNum(SBtxt.getText()) == false) {
            JOptionPane.showMessageDialog(this, "Invalid Entry!/nEnter only numeric values.", "Warning!", JOptionPane.WARNING_MESSAGE);
            SBtxt.setText("");
        }
    }//GEN-LAST:event_SBtxtFocusLost

    private void SFtxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SFtxtFocusLost
        // TODO add your handling code here:
        if (checkIfNum(SFtxt.getText()) == false) {
            JOptionPane.showMessageDialog(this, "Invalid Entry!\nEnter only numeric values.", "Warning!", JOptionPane.WARNING_MESSAGE);
            SFtxt.setText("");
        }
    }//GEN-LAST:event_SFtxtFocusLost

    private void DRtxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DRtxtFocusLost
        // TODO add your handling code here:
        if (!(DRtxt.getText().contains("1") || DRtxt.getText().contains("2") || DRtxt.getText().contains("2") || DRtxt.getText().contains("3") || DRtxt.getText().contains("4") || DRtxt.getText().contains("5") || DRtxt.getText().contains("6") || DRtxt.getText().contains("7"))) {
            JOptionPane.showMessageDialog(this, "Invalid Entry!\nPlease enter only numeric from 1 to 7.", "Invalid Entry", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_DRtxtFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FlightMasterR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FlightMasterR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FlightMasterR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FlightMasterR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FlightMasterR().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AIRtxt;
    private javax.swing.JTextField ARRtxt;
    private javax.swing.JButton AddCMD;
    private javax.swing.JRadioButton AddRB;
    private javax.swing.JButton BackCMD;
    private javax.swing.JButton ClearCMD;
    private javax.swing.JTextField DEPtxt;
    private javax.swing.JTextField DRtxt;
    private javax.swing.JButton DeleteCMD;
    private javax.swing.JTextField FIDtxt;
    private javax.swing.JTextField FNOtxt;
    private javax.swing.JTextField FROtxt;
    private javax.swing.JButton GetCmd;
    private javax.swing.JButton ModCMD;
    private javax.swing.JRadioButton ModRB;
    private javax.swing.JTextField RBtxt;
    private javax.swing.JTextField REtxt;
    private javax.swing.JTextField RFtxt;
    private javax.swing.JTextField SBtxt;
    private javax.swing.JTextField SEtxt;
    private javax.swing.JTextField SFtxt;
    private javax.swing.JTextField TOtxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable masterTBL;
    private javax.swing.ButtonGroup operationBG;
    // End of variables declaration//GEN-END:variables
}
